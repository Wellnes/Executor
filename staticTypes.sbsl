конст ИМЯ_АРХИВА = "myArx.zip"
конст ОБЪЕМ = 22

метод Скрипт()

// объявление переменной
// пер имяСотрудника: Строка
пер имяСотрудника = "Сергей" 

пер массивЧисел = новый Массив<Число>()
массивЧисел = [11,55,33] // в этом массиве могут быть только числа

пер мсСтроки1 = ["один","два","три"]

пер мсСтроки2 = <Строка>["один","два","три"]

пер мсСтроки3 = <Число|Строка>[ "один", 2, "три" ]
 
// Первый вариант - ссылка на метод
знч методДлина = &Строка.Длина()
пер длинаСтроки = методДлина("функциональный тип") 

Консоль.Записать( длинаСтроки )

// Второй вариант - лямбда выражение
знч лямбдаДлина = (Строка: Строка) -> Строка.Длина()
длинаСтроки = лямбдаДлина("выражение")

Консоль.Записать( длинаСтроки )

// динамическая типизация
пер Значение: неизвестно
Значение = "строка"
Значение = 32

// иерархия типов
пер базовыеТипы = СобратьПредков( Тип<Число> )
Консоль.Записать( базовыеТипы )

Консоль.Записать( "Булево: " + Истина.ВСтроку() )

пер Переменная1: Строка|Число|Булево = 7

пер Переменная2: Строка?

пер Переменная3: Строка|Число = 1
Консоль.Записать( "В строку: " + Переменная3.ВСтроку() )

пер Переменная4 = 22

;

//метод УзнатьПлощадь( Длина: Число, Ширина: Число )
//    пер Площадь = Длина * Ширина
//;

метод УзнатьПлощадь( Длина: Число, Ширина: Число ): Число
    возврат Длина * Ширина
;

метод СобратьПредков( Значение: Тип, Предки: Множество<Тип> = {} ): Множество<Тип>
    для базовыйТип из Значение.БазовыеТипы
       Предки.Добавить( базовыйТип )
       СобратьПредков( базовыйТип, Предки ) 
    ;
    возврат Предки
;